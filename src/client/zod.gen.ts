// This file is auto-generated by @hey-api/openapi-ts

import { z } from 'zod';

export const zLoginUser = z.object({
    email: z.string(),
    password: z.string()
});

export const zNewUser = z.object({
    username: z.string(),
    email: z.string(),
    password: z.string()
});

export const zUser = z.object({
    email: z.string(),
    token: z.string(),
    username: z.string(),
    bio: z.string(),
    image: z.string()
});

export const zUpdateUser = z.object({
    email: z.string().optional(),
    password: z.string().optional(),
    username: z.string().optional(),
    bio: z.string().optional(),
    image: z.string().optional()
});

export const zProfile = z.object({
    username: z.string(),
    bio: z.string(),
    image: z.string(),
    following: z.boolean()
});

export const zArticle = z.object({
    slug: z.string(),
    title: z.string(),
    description: z.string(),
    body: z.string(),
    tagList: z.array(z.string()),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
    favorited: z.boolean(),
    favoritesCount: z.number().int(),
    author: zProfile
});

export const zNewArticle = z.object({
    title: z.string(),
    description: z.string(),
    body: z.string(),
    tagList: z.array(z.string()).optional()
});

export const zUpdateArticle = z.object({
    title: z.string().optional(),
    description: z.string().optional(),
    body: z.string().optional()
});

export const zComment = z.object({
    id: z.number().int(),
    createdAt: z.string().datetime(),
    updatedAt: z.string().datetime(),
    body: z.string(),
    author: zProfile
});

export const zNewComment = z.object({
    body: z.string()
});

export const zGenericErrorModel = z.object({
    errors: z.object({
        body: z.array(z.string())
    })
});

export const zLoginResponse = z.object({
    user: zUser
});

export const zCreateUserResponse = z.object({
    user: zUser
});

export const zGetCurrentUserResponse = z.object({
    user: zUser
});

export const zUpdateCurrentUserResponse = z.object({
    user: zUser
});

export const zGetProfileByUsernameResponse = z.object({
    profile: zProfile
});

export const zUnfollowUserByUsernameResponse = z.object({
    profile: zProfile
});

export const zFollowUserByUsernameResponse = z.object({
    profile: zProfile
});

export const zGetArticlesFeedResponse = z.object({
    articles: z.array(z.object({
        slug: z.string(),
        title: z.string(),
        description: z.string(),
        tagList: z.array(z.string()),
        createdAt: z.string().datetime(),
        updatedAt: z.string().datetime(),
        favorited: z.boolean(),
        favoritesCount: z.number().int(),
        author: zProfile
    })),
    articlesCount: z.number().int()
});

export const zGetArticlesResponse = z.object({
    articles: z.array(z.object({
        slug: z.string(),
        title: z.string(),
        description: z.string(),
        tagList: z.array(z.string()),
        createdAt: z.string().datetime(),
        updatedAt: z.string().datetime(),
        favorited: z.boolean(),
        favoritesCount: z.number().int(),
        author: zProfile
    })),
    articlesCount: z.number().int()
});

export const zCreateArticleResponse = z.object({
    article: zArticle
});

export const zGetArticleResponse = z.object({
    article: zArticle
});

export const zUpdateArticleResponse = z.object({
    article: zArticle
});

export const zGetArticleCommentsResponse = z.object({
    comments: z.array(zComment)
});

export const zCreateArticleCommentResponse = z.object({
    comment: zComment
});

export const zDeleteArticleFavoriteResponse = z.object({
    article: zArticle
});

export const zCreateArticleFavoriteResponse = z.object({
    article: zArticle
});

export const zGetTagsResponse = z.object({
    tags: z.array(z.string())
});